@using Framework.Application
@using System.Security.Claims
@model RadMarket.Query.Contracts.ProductAgg.ProductQueryVM
@{
    ViewData["Title"] = Model.Name;
    ViewData["Keyword"] = Model.Keywords;
    ViewData["MetaDescription"] = Model.MetaDescription;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- singleCard -->
<div class="container my-5">
    <div class="row">
        <div class="col-sm-12 col-md-4 single-card-box">
            <div class="border p-3 text-center">
                <p class="h6">نام محصول : <span>@Model.Name</span></p>
                @if (User.Identity.IsAuthenticated)
                {
                    if (User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value == "ClientUser")
                    {
                        <p class="h6">قیمت مصرف کننده : <span>@Model.ConsumerPrice.ToMoney() تومان</span></p>
                        <p class="h6">قیمت خرید : <span>@Model.PurchasePrice.ToMoney() تومان</span></p>
                        <p class="h6">سود شما : <span>@Model.MoneyGain.ToMoney() تومان</span></p>
                        @if (Model.DiscountRate != null || Model.DiscountRate > 0)
                        {
                            <p class="h6">تخفیف : <span>%@Model.DiscountRate</span></p>
                        }
                    }
                }

                <p class="h6">کد محصول : <span>@Model.Code</span></p>
                <p class="h6">دسته بندی : <span>@Model.CategoryName</span></p>
                <p class="h6">تعداد در هر جعبه : <span>@Model.EachBoxCount</span></p>
                @if (User.Identity.IsAuthenticated)
                {
                    if (User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value == "ClientUser")
                    {
                        <form asp-area="" asp-controller="Order" asp-action="AddProductToOpenOrder" method="post">
                            <button type="submit" class="btn btn-outline-danger">افزودن به سبد خرید</button>
                            @*<input type="submit" class="btn btn-outline-danger" value="" />*@
                            @*<a href="" class="btn btn-outline-danger">خرید محصول</a>*@
                            <br>
                            <div class="my-3">
                                <label for="">تعداد :</label>
                                <input type="number" min="0" name="count">
                                <input type="hidden" name="productId" value="@Model.Id">
                            </div>
                        </form>

                    }
                }
            </div>
        </div>
        <div class="col-sm-12 col-md-8 border p-3 ">
            <div class="single-card">
                <div class="single-card-img text-center">
                    <img class="img-fluid rounded"
                         src="~/Pictures/@Model.Picture" alt="@Model.PictureAlt" title="@Model.PictureTitle">
                </div>
                @*<div class="border p-3 my-3">
                        <p class="h6">توضیحات محصول</p>
                        <p>
                            @(Model.MetaDescription.Substring(0,50) + " ...")
                        </p>
                    </div>*@
                <div class="text-single-card border p-3 my-3">
                    <p class="h6">توضیحات محصول</p>
                    <p class="h6">
                        @Html.Raw(Model.Description)
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- singleCard -->
<!-- same product -->

<div class="container my-5">
    <h4>محصولات مرتبط</h4>
    <hr>
    <div class="every-boxes">
        <div class="row justify-content-around">
            @await Component.InvokeAsync("SameProduct", new { categoryId = Model.CategoryId, productBeRemovedById = Model.Id })
        </div>
    </div>
</div>
<!-- same product -->