// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketManagement.Infrastructure.EfCore;

namespace TicketManagement.Infrastructure.EfCore.Migrations
{
    [DbContext(typeof(TicketContext))]
    [Migration("20211210075944_CreateAdminTicketEntity")]
    partial class CreateAdminTicketEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TicketManagement.Domain.StoreTicketAgg.StoreTicket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("FirstStoreId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SecondStoreId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.HasKey("Id");

                    b.ToTable("StoreTickets");
                });

            modelBuilder.Entity("TicketManagement.Domain.TicketAgg.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadByAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadByOwner")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Necessary")
                        .HasColumnType("int");

                    b.Property<int>("Section")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TicketManagement.Domain.StoreTicketAgg.StoreTicket", b =>
                {
                    b.OwnsMany("TicketManagement.Domain.StoreTicketAgg.StoreTicketMessage", "Messages", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Message")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long>("ReciverId")
                                .HasColumnType("bigint");

                            b1.Property<long>("SenderId")
                                .HasColumnType("bigint");

                            b1.Property<DateTime>("SentDate")
                                .HasColumnType("datetime2");

                            b1.Property<long>("StoreTicketId")
                                .HasColumnType("bigint");

                            b1.HasKey("Id");

                            b1.HasIndex("StoreTicketId");

                            b1.ToTable("StoreTicketMessage");

                            b1.WithOwner("StoreTicket")
                                .HasForeignKey("StoreTicketId");

                            b1.Navigation("StoreTicket");
                        });

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("TicketManagement.Domain.TicketAgg.Ticket", b =>
                {
                    b.OwnsMany("TicketManagement.Domain.TicketAgg.TicketMessage", "Messages", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long>("TicketId")
                                .HasColumnType("bigint");

                            b1.Property<long>("UserId")
                                .HasColumnType("bigint");

                            b1.HasKey("Id");

                            b1.HasIndex("TicketId");

                            b1.ToTable("TicketMessage");

                            b1.WithOwner("Ticket")
                                .HasForeignKey("TicketId");

                            b1.Navigation("Ticket");
                        });

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
